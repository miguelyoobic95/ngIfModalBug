

@mixin color-class($class, $color){
    :host(.#{$class}) {
        .outer-container {
            background: cssvar($color);
            .inner-container {
                color: cssvar(light);
                .inner-text {
                    color: cssvar(light);  
                }
            }
        }
    }
}

@mixin outline-color-class($class, $color, $gradient: none){
    @if($gradient == none){
        :host(.#{$class}.outline){
            .outer-container {
                border-color: cssvar($color);
                .inner-container {
                    color: cssvar($color);
                    .inner-text {
                        color: cssvar($color);
                    }
                }
            }
        }
    } @else {
        :host(.#{$class}.outline){
            .outer-container {
                border-image: cssvar($gradient);
                border-image-slice: 1;
                .inner-container {
                    color: cssvar($color);
                }
                .inner-text {
                    color: cssvar($color) !important;
                }
            }
        }
    }
}

:host {
    display: inline-block;
    font-weight: 400;    
    .outer-container {
        transition: all 0.3s;
        opacity: 1;
        border-radius: 2px;
        display: inline-block;
        .inner-container {
            align-items: center;
            justify-content: center;
            line-height: normal;
            padding: 0.25rem 0.625rem;
            font-size: 0.75rem;
            .inner-text {
                color: cssvar(stable);
            }
            .icon-close {
                padding-left: 0.375rem;
                cursor: pointer;
            }
            .icon-left {
                padding-right: 0.375rem;
            }
            .icon-right {
                padding-left: 0.375rem;
            }
        }
        &.closed {
            opacity: 0;
            //display: none;
        }
    }
}

:host(.round) {
    .outer-container {
        border-radius: 2rem;
    }
}

:host(.uppercase) {
    text-transform: uppercase;    
}
:host(.small) {
    .outer-container {
        .inner-container{
            font-size: 0.5625rem;
        }
    }
}

:host(.large) {
    .outer-container {
        // min-width: 140px;
        min-height: 30px;
        .inner-container {
            font-size: 0.9375rem;
            // padding: 5px 8px;
            .icon-close {
                padding-left: 0.75rem;
            }
            .icon-left {
                padding-right: 0.75rem;
            }
            .icon-right {
                padding-left: 0.75rem;
            }
    }
  }
}

:host(.link){
    cursor: pointer;
    .inner-container:hover{
        text-decoration: underline; 
    }
}

:host(.outline){
    &.large {
        .outer-container {
            .inner-container {
                // Override standard padding
                padding: 0.25rem 0.5rem;
            }
        }
    }
    .outer-container {
        background: cssvar(light) !important;
        border: solid 1px rgba(40, 47, 54, 0.15);
        border-radius: 5px;
        .inner-container {
            // Override standard padding
            padding: 0.25rem 0.25rem;
        }
    }
}

:host(.transparent) {
    .outer-container {
        background: rgba(255, 255, 255, 0.4);
        color: cssvar(light);
    }
}

:host(.notification) {
    .outer-container {
        border-radius: 2rem;
        .inner-container {
            font-size: 0.375rem;            
            padding: 0.21875rem 0.34375rem;
        }
    }
}

:host(.notification-medium) {
    .outer-container {
        border-radius: 2rem;
        .inner-container {
            font-size: 0.6875rem;            
            padding: 0.15625rem 0.34375rem;
            transform: translateY(-0.0625rem);
        }
    }
}

@include color-class(accent,accent);
@include color-class(dark,dark);
@include color-class(success,success);
@include color-class(danger,danger);
@include color-class(info,info);
@include color-class(warning,warning);
@include color-class(gradient-warning,gradient-warning);
@include color-class(gradient-success,gradient-success);
@include color-class(gradient-accent,gradient-accent);
@include color-class(gradient-info,gradient-info);
@include color-class(gradient-dark,gradient-dark);
@include color-class(gradient-danger,gradient-danger);

@include outline-color-class(accent, accent);
@include outline-color-class(danger, danger);
@include outline-color-class(warning, warning);
@include outline-color-class(success, success);
@include outline-color-class(info, info);
@include outline-color-class(dark, dark);
@include outline-color-class(gradient-warning, warning, gradient-warning);
@include outline-color-class(gradient-success, success, gradient-success);
@include outline-color-class(gradient-dark, dark, gradient-dark);
@include outline-color-class(gradient-info, info, gradient-info);
@include outline-color-class(gradient-accent, accent, gradient-accent);
@include outline-color-class(gradient-danger, danger, gradient-danger);
