/**
 * This is an autogenerated file created by the Stencil build process.
 * It contains typing information for all components that exist in this project
 * and imports for stencil collections that might be configured in your stencil.config.js file
 */

import '@stencil/core';

declare global {
  namespace JSX {
    interface Element {}
    export interface IntrinsicElements {}
  }
  namespace JSXElements {}

  interface HTMLStencilElement extends HTMLElement {
    componentOnReady(): Promise<this>;
    componentOnReady(done: (ele?: this) => void): void;

    forceUpdate(): void;
  }

  interface HTMLAttributes {}
}

import 'ionicons';
import '@ionic/core';


declare global {

  namespace StencilComponents {
    interface YooAlert {
      'animationName': string;
      'closeable': boolean;
      'heading': string;
      'icon': string;
      'link': string;
      'text': string;
    }
  }

  interface HTMLYooAlertElement extends StencilComponents.YooAlert, HTMLStencilElement {}

  var HTMLYooAlertElement: {
    prototype: HTMLYooAlertElement;
    new (): HTMLYooAlertElement;
  };
  interface HTMLElementTagNameMap {
    'yoo-alert': HTMLYooAlertElement;
  }
  interface ElementTagNameMap {
    'yoo-alert': HTMLYooAlertElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'yoo-alert': JSXElements.YooAlertAttributes;
    }
  }
  namespace JSXElements {
    export interface YooAlertAttributes extends HTMLAttributes {
      'animationName'?: string;
      'closeable'?: boolean;
      'heading'?: string;
      'icon'?: string;
      'link'?: string;
      'onAlertActionSelected'?: (event: CustomEvent<boolean>) => void;
      'onAlertClosed'?: (event: CustomEvent<boolean>) => void;
      'text'?: string;
    }
  }
}


declare global {

  namespace StencilComponents {
    interface YooButton {
      'disabled': boolean;
      'icon': string;
      'isLoading': boolean;
      'text': string;
    }
  }

  interface HTMLYooButtonElement extends StencilComponents.YooButton, HTMLStencilElement {}

  var HTMLYooButtonElement: {
    prototype: HTMLYooButtonElement;
    new (): HTMLYooButtonElement;
  };
  interface HTMLElementTagNameMap {
    'yoo-button': HTMLYooButtonElement;
  }
  interface ElementTagNameMap {
    'yoo-button': HTMLYooButtonElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'yoo-button': JSXElements.YooButtonAttributes;
    }
  }
  namespace JSXElements {
    export interface YooButtonAttributes extends HTMLAttributes {
      'disabled'?: boolean;
      'icon'?: string;
      'isLoading'?: boolean;
      'onButtonClicked'?: (event: CustomEvent<boolean>) => void;
      'text'?: string;
    }
  }
}

declare global { namespace JSX { interface StencilJSX {} } }
